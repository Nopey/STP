{"name":"STP","tagline":"SFML TMX Parser","body":"# What is STP?\r\n\r\nSTP is a library extension for [SFML2](https://github.com/LaurentGomila/SFML) designed to load the Tiled map format and use it with the SFML library.\r\n\r\n## Features\r\n\r\n*   Low memory usage.\r\n*   Support all the encoding and compression formats.\r\n*   Only Support for orthogonal maps (At the moment).\r\n\r\n## Usage\r\n\r\nSTP is easy to use, here is a example code.\r\n\r\n```c++\r\n#include \"SFML/Graphics.hpp\"\r\n#include \"STP/TMXLoader.hpp\"\r\n\r\nint main()\r\n{\r\n    sf::RenderWindow window(sf::VideoMode(360, 280), \"STP Example\");\r\n    tmx::TileMap map(\"path/to/my/file/map.tmx\");\r\n\r\n    map.ShowObjects(); // Display all the layer objects.\r\n    \r\n    map.GetLayer(\"World\").visible = false; // Hide a Layer named World\r\n\r\n    // Start the game loop\r\n    while (window.isOpen()) {\r\n        // Process events\r\n        sf::Event event;\r\n        while (window.pollEvent(event)) {\r\n            // Close window : exit\r\n            if (event.type == sf::Event::Closed)\r\n                window.close();\r\n        }\r\n        // Clear screen\r\n        window.clear();\r\n        // Draw the map\r\n        window.draw(map);\r\n        // Update the window\r\n        window.display();\r\n    }\r\n\r\n    return EXIT_SUCCESS;\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}